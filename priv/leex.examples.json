[
    "$$.payload.sendto & \"/speechtotext/results\"",
    "$$.nodeid & \"-\" & $$.req.files[0].originalname",
    "$$.audiofilename & \".wav\"",
    "$$.audiofilenamewav & \".json\"",
    "\"rm -f \" & $$.jsonfilename & \" \" & $$.audiofilenamewav & \" \" & $$.audiofilename",
    "\"/usr/local/bin/ffmpeg -y -i \" & $$.audiofilename & \" -ar 16000 -ac 1 -c:a pcm_s16le \" & $$.audiofilenamewav",
    "{\t    \"nodeid\": $$.nodeid,\t    \"nonce\": $$.nonce,\t    \"text\": $$.transcribedtext\t}",
    "{\t    \"nodeid\": $$.nodeid,\t    \"text\": \"transcription failed\"\t}",
    "'https://cdn.flowhub.org' & msg.req.originalUrl",
    "{ \"Location\": msg._loc }",
    "\"<a href='\" & msg._loc & \"'>Redirect</a>\"",
    "{\t   \"status\": \"ok\",\t   \"msg\": \"flow was created or updated\",\t   \"payload\": \"\",\t   \"url\": $env(\"FLOWHUB_WEB\") & \"/f/\" & msg.payload.flowid,\t   \"flowid\": msg.payload.flowid,\t   \"revision\": \"\" \t}",
    "\"https://discover.discourse.org/t/\" & $$.start & \".json\"",
    "$$.start + 1",
    "$$.allforums[$$.idx].url",
    "$$.allforums[$$.idx].id",
    "$$.allforums[$$.idx].user_count",
    "$$.forumurl & \"/directory_items.json?period=all&page=0\"",
    "$$.idx + 1",
    "$count($$.allforums)",
    "$number($$.payload) + 1",
    "{\t    \"prompt\": \"Reply in the form of a valid JSON object using only 'keywords', 'keyphrases' and 'summary' as key names. All three key names must appear and have values. There are to be no other key names in the output JSON. Please generate ten keywords, ten key-phrases and a summary of this text: \" & $$.payload.data,\t    \"model\": $$.payload.model,\t    \"format\": \"json\",\t    \"stream\": false\t}",
    "{\t    \"prompt\": \"Reply in the form of a valid JSON object only using 'summary' as key name. The value of this key must be a string. The summary key name must appear in the output. There are to be no other key names in the output JSON. Please a summary of this text: \" & $$.payload.data,\t    \"model\": $$.payload.model,\t    \"format\": \"json\",\t    \"stream\": false\t}",
    "$trim($$.payload)",
    "\"docker kill \" & $trim($$.payload)",
    "{\t    \"prompt\": \"Format the response as JSON object having one key named 'summary'. That key must have a string as value. No other format is allowed. Change all the names of people mentioned in the dream. Pretend to be Sigmund Freud and analyse the following dream: \" & $$.payload.data,\t    \"model\": $$.payload.model,\t    \"format\": \"json\",\t    \"stream\": false\t}",
    "\"version bump to \" & $$.pversion",
    "[\t   {\t       \"path\": msg.github.filename,\t       \"sha\": msg.payload \t   }\t]",
    "{\t   \"fill\":\"blue\",\t   \"shape\":\"dot\",\t   \"text\": (\t       \"File '\" & msg.github.filename & \"' unchanged, nothing committed.\"\t   )\t}",
    "{\t   \"fill\": \"green\",\t   \"shape\": \"dot\",\t   \"text\": (\t       \"Committed \" & msg.github.filename & \" to \" & msg.github.repo\t   )\t}",
    "{\t   \"fill\": \"red\",\t   \"shape\": \"dot\",\t   \"text\": (\t       \"ERROR something failed: \" & msg.error.message\t   )\t}",
    "{\t   \"fill\": \"\",\t   \"shape\": \"\",\t   \"text\": \"\"\t}",
    "{\t   \"path\": \"flows.json\",\t   \"sha\": msg.payload \t}",
    "{\t    \"Authorization\": \"Bearer \" & $env(\"FASTMAIL_API\")\t}",
    "$lowercase($split($$.payload.col3, \"@\")[1])",
    "$append( $$.payload, $$.allDoneDomains )",
    "$lowercase($split($$.contactDetails.col3, \"@\")[1])",
    "$lowercase($$.payload.col3)",
    "$append( $$.payload[0], $$.payload[1] )",
    "$lowercase($$.contactDetails.col3)",
    "$lowercase($$.payload.col1)",
    "$append( $$.payload, $$.allDonePackages )",
    "$lowercase($$.contactDetails.col1)",
    "$$.basedir & \"index.html\"",
    "($$.imgcnt - 1) * 100",
    "\"https://raisen.art/\" & $$.payload.hshid",
    "\"RAISEN.ART/\" & $$.payload.hshid",
    "{\t    \"q\": $$.payload,\t    \"source\": \"en\",\t    \"target\": \"es\"\t}",
    "\"/directory_items.json?period=all&page=\" & $$.start_at_page",
    "$$.base_discourse_server & $$.path",
    "$$.base_discourse_server & \"/p/\" & $$.payload.id",
    "$$.base_discourse_server & \"/t/\" & $$.payload.id",
    "{\t   \"cmd\": \"flows-response\",\t   \"connid\": $$.connid,\t   \"payload\": $$.payload.flows,\t   \"rev\": $$.payload.rev\t}",
    "{\t   \"cmd\": \"deploy-response\",\t   \"connid\": $$.connid,\t   \"payload\": $$.payload\t}",
    "{\t    \"cmd\": \"ws-update\",\t    \"payload\": $$.payload\t}",
    "$random()",
    "\"mogrify -gravity North -pointsize 30 -annotate +0+100 \\\"$(cat \" & $$.file_details.date & \")\\\" \" & $$.file_details.gif",
    "{\t    \"voice\": $$.payload.voice,\t    \"text\": $filter([$$.payload.ssml, $$.payload.content, $$.payload.text, \"nothing to say\"], function($v){ $not($not($v)) })[0],\t    \"vocoder\": \"high\",\t    \"cache\": false,\t    \"ssml\": $not($not($$.payload.ssml))\t}",
    "{    \"cmd\": \"ws-command\",    \"payload\": $$.payload}",
    "\"audio\" & $replace($string($random()),\".\",\"\")",
    "$$.index + 1",
    "$$.samples[$$.index]",
    "{\t    \"voice\": $$.orig_texts[$$.counter].voice,\t    \"text\": $filter([$$.orig_texts[$$.counter].ssml, $$.orig_texts[$$.counter].content, \"nothing to say\"], function($v){ $not($not($v)) })[0],\t    \"vocoder\": \"high\",\t    \"cache\": false,\t    \"ssml\": $not($not($$.orig_texts[$$.counter].ssml))\t}",
    "$$.audiofilename_base & \".wav\"",
    "$$.audiofilename_base & \".16kHz.wav\"",
    "$$.audiofilename16 & \".txt\"",
    "\"/usr/local/bin/ffmpeg -y -i \" & $$.audiofilename & \" -ar 16000 -ac 1 -c:a pcm_s16le \" & $$.audiofilename16",
    "{\t   \"path\": \"openmindmap_flows.json\",\t   \"sha\": msg.payload \t}",
    "\"cp /data/content/\" & $$.payload & \" /cdn-omm/content/\"",
    "$replace($$.payload.answer[0][0], \"stpmodir=\", \"\")",
    "$$.pathprefix & \"/\" & $$.payload.camera & \"/\" & $$.payload.filename",
    "$replace($$.jpgfilename, \".jpg\", \"-despeckled.jpg\")",
    "$replace($$.jpgfilename, \".jpg\", \".svg\")",
    "$replace($$.jpgfilename, \".jpg\", \"-axicli.svg\")",
    "$replace($$.jpgfilename, \".jpg\", \"-axicli-two.svg\")",
    "$replace($$.jpgfilename, \".jpg\", \"-axicli-three.svg\")",
    "$replace($$.jpgfilename, \".jpg\", \"-axicli-four.svg\")",
    "$replace($$.jpgfilename, \".jpg\", \"-axicli-five.svg\")",
    "$replace($$.jpgfilename, \".jpg\", \"-axicli-six.svg\")",
    "$replace($$.jpgfilename, \".jpg\", \"-axicli-seven.svg\")",
    "$$.imghostserver & \"/svgimage?path=\" & $$.svgfilename & \"&cb=\" & $random()",
    "\" --model 2 -G2 -C --accel=60 --pen_rate_lower 80 --pen_rate_raise 100 --pen_pos_down 30 --pen_pos_up 80 --speed_pendown 60 --speed_penup 100 --webhook --webhook_url http://rasp4b:1880/axicliwebhook --progress \" & $$.axifilename",
    "\" -v -T --model 2 -H -G1 -C --pen_rate_lower 60 --pen_rate_raise 100 --pen_pos_down 30 --pen_pos_up 80 \" & $$.axifilename",
    "$$.imghostserver & \"/jpgimage?path=\" & $$.jpgfilename & \"&cb=\" & $random()",
    "{\t   \"camera\":\"nikon-d5600\",\t   \"filename\":\"frame-nikon-d5600-\" & $$.imgdatestr & \".jpg\"\t}",
    "$$.imghostserver & \"/svgimage?path=\" & $$.axifilename & \"&cb=\" & $random()",
    "{\t    \"g\": {\t        \"path\": $$.payload.svg.path   }\t}\t",
    "\"http://strobes:1880/svgimage?path=\" & $$.pathprefix & \"/blank.svg\" & \"&cb=\" & $random()",
    "$$.imghostserver & \"/jpgimage?path=\" & $$.jpgfilename_despeckled & \"&cb=\" & $random()",
    "$$.jpgfilename_despeckled & \" -define histogram:unique-colors=true -format %c histogram:info:- \"",
    "$$.jpgfilename_despeckled & \" -input-format jpg -report-progress  \" & $$.autotracecmdlineoptions & \" -output-format svg -output-file \" & $$.svgfilename",
    "\" -monitor \" & $$.jpgfilename & \"  \" & $$.convertcmdlineoptions & \" \" & $$.jpgfilename_despeckled",
    "$append($$.repos,$$.payload)",
    "$$.page + 1",
    "{\t   \"status\": \"failed\",\t   \"msg\": \"Flow or flow revision not found\"\t}",
    "$substring(\"\" &$random(), 2 )",
    "\"https://github.com/login/oauth/authorize?client_id=\" & $$.github_client_id & \"&state=\" & $$.request_state & \"&redirect_uri=\" & $$.callback_url",
    "$$.req.params.flid & \"/flows.json\"",
    "$$.req.params.flid & \"/nodedetails.json\"",
    "{\t   \"status\": \"failed\",\t   \"msg\": \"Flow or flow revision not found (\" & $lookup($$.req.query, \"v\") & \")\"\t}",
    "{\t    \"flowdata\": $$.flowdata,\t    \"nodedetails\": \"[]\",\t    \"revision\": \"\" & $$.flowcommitsha,\t    \"flowid\": \"\" & $$.req.params.flid\t}",
    "{\t    \"flowdata\": $$.flowdata,\t    \"nodedetails\": $$.payload,\t    \"revision\": \"\" & $$.flowcommitsha,\t    \"flowid\": \"\" & $$.req.params.flid\t}",
    "{\t   \"status\": \"failed\",\t   \"msg\": $$.error.message\t}",
    "$$.payload.filename",
    "{\t    \"content\": $$.payload,\t    \"x\": $$.dim.x,\t    \"y\": $$.dim.y,\t    \"tilename\": $$.dim.tilename\t}",
    "\" -f \" & $$.targetdir & \"/tile*.{gif,svg,gif~}\"",
    "$$.autotracecmdline & \" -centerline \"",
    "$$.convertcmdline & \" -channel RGB -negate \"",
    "$replace( \"\" & $$.tilename, \".gif\", \".svg\")",
    "\" -sigmoidal-contrast \" & $$.contrast_first_value & \",\" & $$.contrast_second_value & \" -threshold \" & $$.threshold & \"%\"",
    "\" -scale \" & $$.scaleby & \"% -sigmoidal-contrast \" & $$.contrast_first_value & \",\" & $$.contrast_second_value & \" -threshold \" & $$.threshold & \"%\"",
    "$$.convertcmdline & \" \" & $$.targetdir & \"/\" & $$.tilename",
    "$$.targetdir & \"/\" & $$.imagename & \" -monitor -crop \" & $$.tilesize & \"x\" & $$.tilesize & \" -set filename:tile \\\"%[fx:page.x/\" & $$.tilesize & \"+1]_%[fx:page.y/\" & $$.tilesize & \"+1]\\\" +repage +adjoin \\\"\" & $$.targetdir & \"/tile_%[filename:tile].gif\\\"\"",
    "\" -error-threshold \" & $$.error_threshold & \" -filter-iterations \" & $$.filter_iterations & \" -color-count \" & $$.color_count & \" -noise-removal \" & $$.noise_removal &  \" -background \" & $$.background_colour & \" -despeckle-level \" & $$.despeckle_level & \" -despeckle-tightness \" & $$.despeckle_tightness ",
    "$$.targetdir & \"/\" & $$.tilename & \" -input-format gif \" & $$.autotracecmdline & \" -output-format svg -output-file \" & $$.targetdir & \"/\" & $$.svgfilename",
    "$$.autotracecmdline & \" -remove-adjacent-corners \"",
    "$replace( $$.svgresultfilename, \".svg\", \"-hatched.svg\" )",
    "\"http://example.com:1880/svgimage?path=\" & $$.hatchoutfilename & \"&cb=\" & $random()",
    "$$.targetdir & \"/\" & \"result-\" & $fromMillis($millis(), '[Y1][M01][D01][H01][m01][s01]') & \"-ts-\" & $$.tilesize & \"-sf-\" & $$.scalefactor & \"-sig-\" & $$.contrast_first_value & \"_\" & $$.contrast_second_value & \"-th-\" & $$.threshold & \".svg\"",
    "$not($$.payload)",
    "$$.payload",
    "\" -scale \" & $$.scaleby & \"%\"",
    "$boolean($$.payload)",
    "{ \t    \"title\": payload,   \t    \"menu\": [\"rename\", \"copy md\", \"copy filename\", \"copy datestr\", \"delete\"],\t    \"imgpath\": \"/content/\" & payload,\t    \"icon\": \"/content/\" & payload,\t    \"origfilename\": payload,\t    \"mdstmt\": \"![img](/content/\" & payload & \")\"\t}",
    "\" --mode manual --model 2 --pen_pos_down \" & $$.pen_height & \" --pen_pos_up \" & $$.pen_height & \" --manual_cmd \" & $$.manual_command",
    "\" --mode manual --model 2  -u 100 --manual_cmd walk_home \"",
    "\" --mode manual --model 2  -u 100 --manual_cmd walk_mmx --dist \" & $$.payload",
    "\" --mode manual --model 2  -u 100 --manual_cmd walk_mmy --dist \" & $$.payload",
    "\" --model 2 -G1 -C --pen_rate_lower 60 --pen_rate_raise 80 --pen_pos_down 50 --pen_pos_up 80 --progress \" & $$.pathprefix & \"/\" & $$.axifilename",
    "$split( $split($$.payload.origfilename, \"-\")[3], \".\")[0]",
    "\"frame-nikon-d5600-\" & $$.datestr & \".jpg\"",
    "\"http://rasp4b:1880/jpgimage?path=\" & $$.pathprefix & \"/nikon-d5600/\" & $$.filename & \"&cb=\" & $random()",
    "\"frame-nikon-d5600-\" & $flowContext(\"currentdatestr\") & \".jpg\"",
    "\"frame-nikon-d5600-\" & $flowContext(\"currentdatestr\") & \"-des-\" & $flowContext(\"contrast_min\") & \"-\" & $flowContext(\"contrast_max\") & \"-\" & $flowContext(\"contrast_threshold\") & \".jpg\"",
    "\" -sigmoidal-contrast \" & $flowContext(\"contrast_min\") & \",\" & $flowContext(\"contrast_max\") & \" -threshold \" & $flowContext(\"contrast_threshold\") & \"% -morphology Erode Octagon -morphology Erode Octagon -morphology Erode Octagon\"",
    "\" \" & $.pathprefix & \"/nikon-d5600/\" & $$.filename & \"  \" & $$.convertcmdlineoptions & \" \" & $.pathprefix & \"/nikon-d5600/\" & $$.outfilename",
    "\"http://rasp4b:1880/jpgimage?path=\" & $$.pathprefix & \"/nikon-d5600/\" & $$.outfilename & \"&cb=\" & $random()",
    "\" --mode manual --model 2 --penlift 3 --pen_pos_down \" & $$.pen_height & \" --pen_pos_up \" & $$.pen_height & \" --manual_cmd \" & $$.manual_command",
    "\"convert \" & $$.filename & \" \" & $$.filename & \".png\"",
    "{\t        \"lastModified\": $now(),\t        \"name\": $$.file.originalname,\t        \"size\": $$.file.size,\t        \"type\": $$.file.mimetype\t}",
    "$$.mdlink & \".png\"",
    "{\t    \"relative_url\": $$.mdlink\t}",
    "{\t    \"type\": \"bookmark\"\t}",
    "{\t    \"relative_url\": $$.mdlink,\t    \"mimetype\": $$.req.files[0].mimetype,\t    \"poster_url\": $$.mdlink & \".png\",\t    \"filename\": $$.req.files[0].originalname\t}",
    "\"ffmpeg -ss 00:00:00.01 -i \" & $$.filename & \" -frames:v 1 -update 1 \" & $$.filename & \".png\"",
    "\"exiftool -j -SourceImageWidth -SourceImageHeight \" & $$.filename",
    "{\t    \"relative_url\": $$.mdlink,\t    \"mimetype\": $$.req.files[0].mimetype,\t    \"poster_url\": $$.mdlink & \".png\",\t    \"filename\": $$.req.files[0].originalname,\t    \"width\": $$.payload[0].SourceImageWidth,\t    \"height\": $$.payload[0].SourceImageHeight\t}",
    "$$.servicehost & \"/text/classification\"",
    "$$.servicehost & \"/text/tospeech\"",
    "\" cp '\" & $$.filename & \"' /cdn-omm/content/\"",
    "$filter([$$.servicehost, $flowContext(\"servicehost\"), \"http://example.com:1880\"], function($v){ $not($not($v)) })[0]",
    "$$.servicehost & \"/speech/totext\"",
    "{\t    \"nodeid\": {\t        \"value\": $$.payload.nodeid\t    },\t    \"file\": {\t        \"value\": $$.req.files[0].buffer,\t        \"options\": {\t            \"filename\": $$.req.files[0].originalname,\t            \"size\": $$.req.files[0].size\t        }\t    },\t    \"sendto\": {\t        \"value\": $$.respondtohost\t    },\t    \"nonce\": {\t        \"value\": $$.nonce\t    }\t}",
    "$filter([$$.respondtohost, $flowContext(\"respondtohost\"), $env(\"NODE_RED_RESPOND_TO_HOST\"), \"http://example.com:2880\"], function($v){ $not($not($v)) })[0]\t",
    "/* @obfuscate-safe */ $substring(\"\"&$random(),2,1) & \".\" & $substring(\"\"&$random(),2,1) & \".\" & $replace($substring(\"\"&$random(),2,3),/^0/,'1')",
    "{\t   \"fill\": \"green\",\t   \"shape\": \"dot\",\t   \"text\": (\t       \"published to medium\"\t   )\t}",
    "\"[\" & $lowercase($split(msg.req.hostname,\".\")[0]) &\"] \" & $lowercase(msg.req.params.name)",
    "\"[\" & $lowercase($split(msg.req.hostname,\".\")[0]) &\"] \" & \"index\"",
    "\"[\" & $lowercase($split(msg.req.hostname,\".\")[0]) &\"-topic] \" & $lowercase(msg.req.params.name)",
    "'https://' & msg.req.hostname & msg.req.originalUrl",
    "'https://cdn.openmindmap.org/content/' & msg.req.params.name",
    "$string($$.payload, true)",
    "$string($$.error,true)",
    "{\t    \"path\": $$.filename,\t    \"sha\": $$.payload\t}",
    "$$.flowid & \"/flows.json\"",
    "$env(\"FLOWHUB_WEB\") & msg.req.originalUrl",
    "$replace($replace($env(\"FLOWHUB_WEB\"), /https?:\\/\\//,\"\"), /:.+$/,'')",
    "$replace($replace($env(\"FLOWHUB_API\"), /https?:\\/\\//,\"\"), /:.+$/,'')",
    "{\t   \"status\": \"ok\",\t   \"msg\": \"flow was created or updated\",\t   \"payload\": \"\",\t   \"url\": $env(\"FLOWHUB_WEB\") & \"/f/\" & msg.flowid,\t   \"flowid\": msg.flowid,\t   \"revision\": \"\" & msg.payload\t}",
    "{\t   \"status\": \"nochange\",\t   \"msg\": \"flow did not change\",\t   \"payload\": \"\",\t   \"url\": $env(\"FLOWHUB_WEB\") & \"/f/\" & msg.flowid,\t   \"flowid\": msg.flowid,\t   \"revision\": msg.payload\t}",
    "{\t   \"status\": \"failed\",\t   \"msg\": msg.error.message\t}",
    "{\t    \"status\": \"ok\",\t    \"html\": $$.payload,\t    \"flowdata\": $$.flowdata,\t    \"tab\": $$.tabdetails\t}",
    "{\t    \"status\": \"ok\",\t    \"html\": $$.payload\t}",
    "'https://spread-the.love' & msg.req.originalUrl",
    "5000 * 12 * 3",
    "currentTimestamp - renderStartedAt",
    "{\t   \"status\": \"ok\",\t   \"msg\": \"Flow was submitted, you have been sent an email to confirm your submission.\",\t   \"payload\": \"\",\t   \"url\": \"https://github.com/\" & $env(\"GITHUB_OWNER\") & \"/\" & $env(\"GITHUB_REPO\") & \"/tree/\" & msg.flowid,\t   \"flowid\": msg.flowid,\t   \"revision\": \"\" & msg.payload\t}",
    "$count($keys($flowContext(\"alljson\").data))",
    "{\t    \"flid\": $$.payload.flowid\t}",
    "{\t   \"html\": $$.svgDiffViewer,\t   \"flows\": $$.flows,\t   \"flowid\": $$.flowid\t}",
    "{\t   \"html\": $$.svgDiffViewer,\t   \"flows\": $$.flows,\t   \"flowid\": $$.flowid,\t   \"desc\": $$.payload\t}",
    "msg.__fh_deadred_host__ & '/?fhid=' & msg.req.params.object & '&tk=' & msg.req.query.t",
    "$lowercase(req.params.object)",
    "{\t    \"Location\": msg.__fh_cdn_host__ & \"/compare?flowhubpr=\" & msg.branch\t}",
    "{\t   \"messages\": [\t        {\t           \"role\": \"user\",\t           \"content\": $$.prompt\t        }\t    ],\t   \"model\": $$.model01,\t   \"stream\": false\t}\t",
    "$$.modellist[$$.modelptr]",
    "$$.modelptr + 1",
    "$count($$.modellist)",
    "\"soxi -D \" & $$.audiofilename",
    "{\t   \"keep_alive\": \"0\",\t   \"model\": $$.payload.models[0].model\t}",
    "{\t   \"messages\": [\t        {\t           \"role\": \"user\",\t           \"content\": $$.prompt\t        }\t    ],\t    \"model\": $$.model01,\t   \"stream\": false\t}\t",
    "$append( $flowContext(\"chatprotocol\"), [$$.payload.message])",
    "{\t    \"voice\": $$.voice,\t    \"text\": $$.orig_texts[$$.counter].content,\t    \"vocoder\": \"high\",\t    \"cache\": true\t}",
    "$lookup($$.payload, $$.speaker).speakers",
    "$keys($$.voicesofspeaker)",
    "$filter($$.voicesofspeaker, function ($vale) { $trim($vale) != \"ED\"})",
    "[]",
    "{\t   \"messages\": [\t        {\t           \"role\": \"user\",\t           \"content\": $$.prompt\t        }\t    ],\t    \"model\": $$.model01,\t   \"stream\": false,\t   \"format\": \"json\"\t}\t",
    "[\t    /* message 1 */\t    \"hi there\",\t    /* messaage 2 */\t    \"I want you to rate a conversation between two agents on how friendly the conversation is towards humankinds long term survival. Can you do that?\",\t    /* message 3 */\t    \"I will now send you the conversation in full:\" & $$.writermap[0].text,\t    /* message 4 */\t    \"Please provide a rating betweeen one and ten (ten most friendly) of the human friendliness of the text\",\t    /* message 5 */\t    \"how well do the ideas in the text ensure the long term survival of humankind - again a rating of one to ten (most positive).\",\t    /* message 6 */\t    \"please provide a json formatted output with all ratings\"\t]",
    "$count($$.usermessages)",
    "$$.usermsgptr + 1",
    "'/scrnsht/' & payload",
    "$split(msg.req.query.c, ',')",
    "'https://cdn.flowhub.org' & msg.req.originalUrl",
    "{ \"Location\": msg._loc }",
    "\"<a href='\" & msg._loc & \"'>Redirect</a>\"",
    "\"version bump to \" & $$.pversion",
    "[\t   {\t       \"path\": msg.github.filename,\t       \"sha\": msg.payload \t   }\t]",
    "{\t   \"html\": msg.html,\t   \"metadata\": msg.metadata \t}",
    "{\t   \"html\": msg.svgDiffViewer,\t   \"flows\": msg.payload \t}",
    "{ \"html\": \"hello world\", \"flows\": [] }",
    "$$.payload + 1",
    "{\t    \"text\": $$.payload.text & \" another test\"\t}",
    "{\t    \"station\": $$.station_details,\t    \"details\": $$.payload\t}",
    "\"https://registry.npmjs.org/\" & $$.module.id",
    "$not($exists($lookup($$.versions,$$.module.id)))",
    "{\t    \"data\": $$.payload\t}",
    "\"module=\" & $$.module_name & \"&_csrf=\" & $$.payload",
    "\"curl -v -XPOST 'https://flows.nodered.org/add/node' -c /tmp/cookies.txt -b /tmp/cookies.txt -H 'referer: https://flows.nodered.org/node/\" & $$.module_name & \"' -H 'Content-Type: application/x-www-form-urlencoded' -H 'x-requested-with: XMLHttpRequest' -d '\" & $$.data_string & \"'\"",
    "$substringBefore( $substringAfter($$.payload, \"value=\\\"\"), \"\\\">\")",
    "\"/directory_items.json?period=all&page=\" & $$.start_at_page",
    "$$.base_discourse_server & $$.path",
    "$$.base_discourse_server & \"/p/\" & $$.payload.id",
    "$$.base_discourse_server & \"/t/\" & $$.payload.id",
    "msg.row + 1",
    "msg.column-10",
    "{\t    \"Email\": payload.title\t}",
    "{\t    \"path\": msg.filename,\t    \"sha\": msg.payload\t}",
    "{\t    \"name\": $$.githubauthor,\t    \"email\": $$.githubauthoremail\t}",
    "{\t    \"Authorization\": \"Bearer \" & $env(\"FASTMAIL_API\")\t}",
    "{\t    \"message\": \"Form count not 1 was \" & $count(msg.payload)\t}",
    "{\t    \"message\": \"Form method assumed to be post, was: \" & msg.payload[0].method\t}",
    "[ [$$.p2], [$$.p1] ]",
    "$$.offset + $$.limit",
    "$$.base_url & \"/\" & $$.api_endpoint & \"?offset=\" & $$.offset & \"&limit=\" & $$.limit",
    "{\t   \"category\": \"rssfeeds\",\t   \"old_than_ms\": 1000 * 60 * 30\t}",
    "{\t    \"flowContent\": $$.payload\t}\t",
    "5000 * 12 * 2",
    "currentTimestamp - renderStartedAt",
    "$flowContext(\"responseCount\") + 1",
    "$string($$.error, true) & $string($$._error, true) & $string($$, true)",
    "\"https://api.github.com/repos/\" & $$.owner & \"/\" & $$.repo & \"/branches?per_page=100\"",
    "\"https://api.github.com/repos/\" & $$.owner & \"/\" & $$.repo & \"/git/trees/\"  & $$.payload[0].commit.sha",
    "{\t    \"val\": $$.payload,\t    \"key\": $$.topic,\t    \"col\": $parseInteger($replace($replace($$.topic,/c/,''),/r.+$/,''), \"99\"),\t    \"row\": $parseInteger($replace($replace($$.topic,/c[0-9]+/,''),/r/,''), \"99\")\t}",
    "\"[\" & msg.req.params.path1 & \"] \" & msg.req.params.path2",
    "{\t   \"path\": msg.backupcfg.flowname,\t   \"sha\": msg.payload \t}",
    "{\t   \"name\": msg.backupcfg.author_name,\t   \"email\": msg.backupcfg.author_email\t}",
    "{\t    \"zclient\": {\t        \"sessionid\": $$.payload.zmachine.sessionid,\t        \"version\": \"0.08\",\t        \"command\": $$.commands[$$.cmdptr]\t    }\t}",
    "$$.cmdptr + 1",
    "$$.commands[$$.cmdptr]",
    "{\t    \"zclient\": {\t        \"sessionid\": $$.payload.zmachine.sessionid,\t        \"version\": \"0.08\",\t        \"command\": $$.cmd\t    }\t}",
    "$count( $$.commands )",
    "{\t    \"zclient\": {\t        \"sessionid\": $flowContext(\"sessionid\"),\t        \"version\": \"0.08\",\t        \"command\": $$.payload\t    }\t}",
    "$string($$._error)",
    "$random() > 0.6 ? 404 : ($random() > 0.3 ? 500 : 200)",
    "{\t    \"shape\": \"dot\",\t    \"colour\": \"red\",\t    \"title\": $$.error.message\t}",
    "{\t    \"shape\": \"dot\",\t    \"colour\": \"red\",\t    \"title\": \"Failed: \" & $$.statusCode\t}",
    "msg.column - 1",
    "msg.cnt + 1",
    "{\t    \"type\": \"scale\",\t    \"relative\": false,\t    \"values\": {\t      \"x\":1,\t      \"y\":1,\t      \"z\":$random() * 4\t    },\t    \"pivot\": {\t        \"x\": null,\t        \"y\": null,\t        \"z\": null\t    }\t}",
    "{\t    \"type\": \"scale\",\t    \"relative\": false,\t    \"values\": {\t      \"x\":1,\t      \"y\":1,\t      \"z\":$$.payload\t    },\t    \"pivot\": {\t        \"x\": null,\t        \"y\": null,\t        \"z\": null\t    }\t}",
    "{\t    \"path\": $$.filename,\t    \"sha\": $$.payload\t}",
    "$append( $$.job.steps, [$$.step])",
    "{\t    \"type\": \"position\",\t    \"relative\": false,\t    \"values\": {\t      \"x\":$sum([$$.payload[0].value,1]),\t      \"y\":0,\t      \"z\":0\t    },\t    \"pivot\": {\t        \"x\": null,\t        \"y\": null,\t        \"z\": null\t    }\t}",
    "{\t    \"type\": \"position\",\t    \"relative\": false,\t    \"values\": {\t      \"x\":0,\t      \"y\":0,\t      \"z\":0\t    },\t    \"pivot\": {\t        \"x\": null,\t        \"y\": null,\t        \"z\": null\t    }\t}",
    "$substring(\"\"&$random(),2,1) & \".\" & $substring(\"\"&$random(),2,1) & \".\" & $replace($substring(\"\"&$random(),2,3),/^0/,'1')",
    "$trim($$.payload)",
    "{\t   \"messages\": [\t    {\t       \"role\": \"user\",\t       \"content\": $$.prompt\t    }\t    ],\t   \"model\": \"llama3:latest\",\t   \"stream\": false\t}\t",
    "$append( $flowContext(\"chatprotocol\"), [$$.payload.message])",
    "[]",
    "{\t    \"query\": $$.payload\t}",
    "$$.context._datatopdir & \"/\" & $fromMillis($millis(), '[Y0001][M01][D01]') & \"/\" & $$.context.prefix & \"/\"",
    "$$.context._datapath & ( $$.context.name ? $$.context.name : $replace($split($$.context._ymlurl,\"/\")[-1],/[.]ya?ml/,\"\")) & \".\" & $replace($lowercase($$.context.data.format),/[+/.]/,\"_\")",
    "$replace( $$.context._datafile, /[.].+$/, \".xml.tgz\")",
    "$$.context._datafile & \"-\" & $$.payload.meta.result.range_start",
    "$replace( $$.context._datafile, /[.].+$/, \".jsonl.bz2\")",
    "$replace( $$.context._datafile, /[.].+$/, \".zip\")",
    "$$.context._datafile & \".xls\"",
    "$replace( $$.context._datafile, /[.].+$/, \".html\")",
    "\"- [\" & $$.payload.done & \"] [\" & $replace($$.payload.path,\"datasets/\",\"\") & \"](https://raw.githubusercontent.com/opensanctions/opensanctions/main/\" &  $$.payload.path & \") [@](https://github.com/opensanctions/opensanctions/tree/main/\" & $replace($$.payload.path,/\\/[^\\/]+$/,\"\") & \")\\n\"",
    "$$.context._datafile & \".zip\"",
    "$replace( $$.context._datafile, \".json\", \".csv\")",
    "$replace( $$.context._datafile, /[.].+$/, \".json\")",
    "$replace( $$.context._datafile, /[.].+$/, \".html_csv\")",
    "$$.context._datapath & $$.payload.legislatures[0].popolo",
    "$$.context._datapath & $$.payload.csv",
    "{\t   \"fill\": \"red\",\t   \"shape\": \"dot\",\t   \"text\": (\t       \"ERROR something failed: \" & msg.error.message\t   )\t}",
    "{\t   \"fill\": \"green\",\t   \"shape\": \"dot\",\t   \"text\": (\t       \"published to medium\"\t   )\t}",
    "{\t   \"fill\": \"\",\t   \"shape\": \"\",\t   \"text\": \"\"\t}",
    "\"data:image/svg+xml;base64,\" & payload",
    "\"data:image/png;base64,\" & payload",
    "{ \"val\": msg.payload, \"key\": msg.filename }",
    "{\t   \"payload\": msg.payload,\t   \"name\": \"flowviewer.css\"\t}",
    "{\t   \"payload\": msg.payload,\t   \"name\": \"flowviewer.js\"\t}",
    "{\t   \"payload\": msg.payload,\t   \"name\": \"flows.json\"\t}",
    "'https://cdn.openmindmap.org/embed/' & msg.req.params.name",
    "$split($$.payload.name,\"/\")[-1]",
    "{\t    \"lomin\": $$.lomin,\t    \"lamin\": $$.lamin,\t    \"lamax\": $$.lamax,\t    \"lomax\": $$.lomax\t}",
    "/* asdsadasd",
    "$sum($map($$.payload, function($v) { $v.col2.col3 }))"
]
